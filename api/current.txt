package android.support.test.uiautomator {

  public class By {
    method public static android.support.test.uiautomator.BySelector checkable(boolean);
    method public static android.support.test.uiautomator.BySelector checked(boolean);
    method public static android.support.test.uiautomator.BySelector clazz(java.lang.String);
    method public static android.support.test.uiautomator.BySelector clazz(java.lang.String, java.lang.String);
    method public static android.support.test.uiautomator.BySelector clazz(java.lang.Class);
    method public static android.support.test.uiautomator.BySelector clazz(java.util.regex.Pattern);
    method public static android.support.test.uiautomator.BySelector clickable(boolean);
    method public static android.support.test.uiautomator.BySelector copy(android.support.test.uiautomator.BySelector);
    method public static android.support.test.uiautomator.BySelector depth(int);
    method public static android.support.test.uiautomator.BySelector desc(java.lang.String);
    method public static android.support.test.uiautomator.BySelector desc(java.util.regex.Pattern);
    method public static android.support.test.uiautomator.BySelector descContains(java.lang.String);
    method public static android.support.test.uiautomator.BySelector descEndsWith(java.lang.String);
    method public static android.support.test.uiautomator.BySelector descStartsWith(java.lang.String);
    method public static android.support.test.uiautomator.BySelector enabled(boolean);
    method public static android.support.test.uiautomator.BySelector focusable(boolean);
    method public static android.support.test.uiautomator.BySelector focused(boolean);
    method public static android.support.test.uiautomator.BySelector hasChild(android.support.test.uiautomator.BySelector);
    method public static android.support.test.uiautomator.BySelector hasDescendant(android.support.test.uiautomator.BySelector);
    method public static android.support.test.uiautomator.BySelector hasDescendant(android.support.test.uiautomator.BySelector, int);
    method public static android.support.test.uiautomator.BySelector longClickable(boolean);
    method public static android.support.test.uiautomator.BySelector pkg(java.lang.String);
    method public static android.support.test.uiautomator.BySelector pkg(java.util.regex.Pattern);
    method public static android.support.test.uiautomator.BySelector res(java.lang.String);
    method public static android.support.test.uiautomator.BySelector res(java.lang.String, java.lang.String);
    method public static android.support.test.uiautomator.BySelector res(java.util.regex.Pattern);
    method public static android.support.test.uiautomator.BySelector scrollable(boolean);
    method public static android.support.test.uiautomator.BySelector selected(boolean);
    method public static android.support.test.uiautomator.BySelector text(java.lang.String);
    method public static android.support.test.uiautomator.BySelector text(java.util.regex.Pattern);
    method public static android.support.test.uiautomator.BySelector textContains(java.lang.String);
    method public static android.support.test.uiautomator.BySelector textEndsWith(java.lang.String);
    method public static android.support.test.uiautomator.BySelector textStartsWith(java.lang.String);
  }

  public class BySelector {
    method public android.support.test.uiautomator.BySelector checkable(boolean);
    method public android.support.test.uiautomator.BySelector checked(boolean);
    method public android.support.test.uiautomator.BySelector clazz(java.lang.String);
    method public android.support.test.uiautomator.BySelector clazz(java.lang.String, java.lang.String);
    method public android.support.test.uiautomator.BySelector clazz(java.lang.Class);
    method public android.support.test.uiautomator.BySelector clazz(java.util.regex.Pattern);
    method public android.support.test.uiautomator.BySelector clickable(boolean);
    method public android.support.test.uiautomator.BySelector depth(int);
    method public android.support.test.uiautomator.BySelector depth(int, int);
    method public android.support.test.uiautomator.BySelector desc(java.lang.String);
    method public android.support.test.uiautomator.BySelector desc(java.util.regex.Pattern);
    method public android.support.test.uiautomator.BySelector descContains(java.lang.String);
    method public android.support.test.uiautomator.BySelector descEndsWith(java.lang.String);
    method public android.support.test.uiautomator.BySelector descStartsWith(java.lang.String);
    method public android.support.test.uiautomator.BySelector enabled(boolean);
    method public android.support.test.uiautomator.BySelector focusable(boolean);
    method public android.support.test.uiautomator.BySelector focused(boolean);
    method public android.support.test.uiautomator.BySelector hasChild(android.support.test.uiautomator.BySelector);
    method public android.support.test.uiautomator.BySelector hasDescendant(android.support.test.uiautomator.BySelector);
    method public android.support.test.uiautomator.BySelector hasDescendant(android.support.test.uiautomator.BySelector, int);
    method public android.support.test.uiautomator.BySelector longClickable(boolean);
    method public android.support.test.uiautomator.BySelector maxDepth(int);
    method public android.support.test.uiautomator.BySelector minDepth(int);
    method public android.support.test.uiautomator.BySelector pkg(java.lang.String);
    method public android.support.test.uiautomator.BySelector pkg(java.util.regex.Pattern);
    method public android.support.test.uiautomator.BySelector res(java.lang.String);
    method public android.support.test.uiautomator.BySelector res(java.lang.String, java.lang.String);
    method public android.support.test.uiautomator.BySelector res(java.util.regex.Pattern);
    method public android.support.test.uiautomator.BySelector scrollable(boolean);
    method public android.support.test.uiautomator.BySelector selected(boolean);
    method public android.support.test.uiautomator.BySelector text(java.lang.String);
    method public android.support.test.uiautomator.BySelector text(java.util.regex.Pattern);
    method public android.support.test.uiautomator.BySelector textContains(java.lang.String);
    method public android.support.test.uiautomator.BySelector textEndsWith(java.lang.String);
    method public android.support.test.uiautomator.BySelector textStartsWith(java.lang.String);
  }

   abstract class Condition {
  }

  public final class Configurator {
    method public long getActionAcknowledgmentTimeout();
    method public static android.support.test.uiautomator.Configurator getInstance();
    method public long getKeyInjectionDelay();
    method public long getScrollAcknowledgmentTimeout();
    method public long getWaitForIdleTimeout();
    method public long getWaitForSelectorTimeout();
    method public android.support.test.uiautomator.Configurator setActionAcknowledgmentTimeout(long);
    method public android.support.test.uiautomator.Configurator setKeyInjectionDelay(long);
    method public android.support.test.uiautomator.Configurator setScrollAcknowledgmentTimeout(long);
    method public android.support.test.uiautomator.Configurator setWaitForIdleTimeout(long);
    method public android.support.test.uiautomator.Configurator setWaitForSelectorTimeout(long);
  }

  public final class Direction extends java.lang.Enum {
    method public static android.support.test.uiautomator.Direction reverse(android.support.test.uiautomator.Direction);
    method public static android.support.test.uiautomator.Direction valueOf(java.lang.String);
    method public static final android.support.test.uiautomator.Direction[] values();
    enum_constant public static final android.support.test.uiautomator.Direction DOWN;
    enum_constant public static final android.support.test.uiautomator.Direction LEFT;
    enum_constant public static final android.support.test.uiautomator.Direction RIGHT;
    enum_constant public static final android.support.test.uiautomator.Direction UP;
  }

  public abstract class EventCondition extends android.support.test.uiautomator.Condition {
    ctor public EventCondition();
  }

  public abstract interface IAutomationSupport {
    method public abstract void sendStatus(int, android.os.Bundle);
  }

  public abstract class SearchCondition extends android.support.test.uiautomator.Condition {
    ctor public SearchCondition();
  }

  public class StaleObjectException extends java.lang.RuntimeException {
    ctor public StaleObjectException();
  }

  public class UiAutomatorInstrumentationTestRunner extends android.test.InstrumentationTestRunner {
    ctor public UiAutomatorInstrumentationTestRunner();
    method protected void initializeUiAutomatorTest(android.support.test.uiautomator.UiAutomatorTestCase);
  }

  public deprecated class UiAutomatorTestCase extends android.test.InstrumentationTestCase {
    ctor public UiAutomatorTestCase();
    method public deprecated android.support.test.uiautomator.IAutomationSupport getAutomationSupport();
    method public android.os.Bundle getParams();
    method public android.support.test.uiautomator.UiDevice getUiDevice();
    method public deprecated void sleep(long);
  }

  public class UiCollection extends android.support.test.uiautomator.UiObject {
    ctor public UiCollection(android.support.test.uiautomator.UiSelector);
    method public android.support.test.uiautomator.UiObject getChildByDescription(android.support.test.uiautomator.UiSelector, java.lang.String) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public android.support.test.uiautomator.UiObject getChildByInstance(android.support.test.uiautomator.UiSelector, int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public android.support.test.uiautomator.UiObject getChildByText(android.support.test.uiautomator.UiSelector, java.lang.String) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public int getChildCount(android.support.test.uiautomator.UiSelector);
  }

  public class UiDevice {
    method public void clearLastTraversedText();
    method public boolean click(int, int);
    method public boolean drag(int, int, int, int, int);
    method public deprecated void dumpWindowHierarchy(java.lang.String);
    method public void dumpWindowHierarchy(java.io.File) throws java.io.IOException;
    method public void dumpWindowHierarchy(java.io.OutputStream) throws java.io.IOException;
    method public java.lang.String executeShellCommand(java.lang.String) throws java.io.IOException;
    method public android.support.test.uiautomator.UiObject findObject(android.support.test.uiautomator.UiSelector);
    method public android.support.test.uiautomator.UiObject2 findObject(android.support.test.uiautomator.BySelector);
    method public java.util.List<android.support.test.uiautomator.UiObject2> findObjects(android.support.test.uiautomator.BySelector);
    method public void freezeRotation() throws android.os.RemoteException;
    method public deprecated java.lang.String getCurrentActivityName();
    method public java.lang.String getCurrentPackageName();
    method public int getDisplayHeight();
    method public int getDisplayRotation();
    method public android.graphics.Point getDisplaySizeDp();
    method public int getDisplayWidth();
    method public static deprecated android.support.test.uiautomator.UiDevice getInstance();
    method public static android.support.test.uiautomator.UiDevice getInstance(android.app.Instrumentation);
    method public java.lang.String getLastTraversedText();
    method public java.lang.String getLauncherPackageName();
    method public java.lang.String getProductName();
    method public boolean hasAnyWatcherTriggered();
    method public boolean hasObject(android.support.test.uiautomator.BySelector);
    method public boolean hasWatcherTriggered(java.lang.String);
    method public boolean isNaturalOrientation();
    method public boolean isScreenOn() throws android.os.RemoteException;
    method public boolean openNotification();
    method public boolean openQuickSettings();
    method public R performActionAndWait(java.lang.Runnable, android.support.test.uiautomator.EventCondition<R>, long);
    method public boolean pressBack();
    method public boolean pressDPadCenter();
    method public boolean pressDPadDown();
    method public boolean pressDPadLeft();
    method public boolean pressDPadRight();
    method public boolean pressDPadUp();
    method public boolean pressDelete();
    method public boolean pressEnter();
    method public boolean pressHome();
    method public boolean pressKeyCode(int);
    method public boolean pressKeyCode(int, int);
    method public boolean pressMenu();
    method public boolean pressRecentApps() throws android.os.RemoteException;
    method public boolean pressSearch();
    method public void registerWatcher(java.lang.String, android.support.test.uiautomator.UiWatcher);
    method public void removeWatcher(java.lang.String);
    method public void resetWatcherTriggers();
    method public void runWatchers();
    method public void setCompressedLayoutHeirarchy(boolean);
    method public void setOrientationLeft() throws android.os.RemoteException;
    method public void setOrientationNatural() throws android.os.RemoteException;
    method public void setOrientationRight() throws android.os.RemoteException;
    method public void sleep() throws android.os.RemoteException;
    method public boolean swipe(int, int, int, int, int);
    method public boolean swipe(android.graphics.Point[], int);
    method public boolean takeScreenshot(java.io.File);
    method public boolean takeScreenshot(java.io.File, float, int);
    method public void unfreezeRotation() throws android.os.RemoteException;
    method public R wait(android.support.test.uiautomator.SearchCondition<R>, long);
    method public void waitForIdle();
    method public void waitForIdle(long);
    method public boolean waitForWindowUpdate(java.lang.String, long);
    method public void wakeUp() throws android.os.RemoteException;
  }

  public class UiObject {
    ctor public deprecated UiObject(android.support.test.uiautomator.UiSelector);
    method public void clearTextField() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean click() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean clickAndWaitForNewWindow() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean clickAndWaitForNewWindow(long) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean clickBottomRight() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean clickTopLeft() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean dragTo(android.support.test.uiautomator.UiObject, int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean dragTo(int, int, int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean exists();
    method protected android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long);
    method public android.graphics.Rect getBounds() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public android.support.test.uiautomator.UiObject getChild(android.support.test.uiautomator.UiSelector) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public int getChildCount() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public java.lang.String getClassName() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public java.lang.String getContentDescription() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public android.support.test.uiautomator.UiObject getFromParent(android.support.test.uiautomator.UiSelector) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public java.lang.String getPackageName() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public final android.support.test.uiautomator.UiSelector getSelector();
    method public java.lang.String getText() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public android.graphics.Rect getVisibleBounds() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean isCheckable() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean isChecked() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean isClickable() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean isEnabled() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean isFocusable() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean isFocused() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean isLongClickable() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean isScrollable() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean isSelected() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean longClick() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean longClickBottomRight() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean longClickTopLeft() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean performMultiPointerGesture(android.view.MotionEvent.PointerCoords...);
    method public boolean performTwoPointerGesture(android.graphics.Point, android.graphics.Point, android.graphics.Point, android.graphics.Point, int);
    method public boolean pinchIn(int, int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean pinchOut(int, int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean setText(java.lang.String) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean swipeDown(int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean swipeLeft(int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean swipeRight(int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean swipeUp(int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean waitForExists(long);
    method public boolean waitUntilGone(long);
    field protected static final int FINGER_TOUCH_HALF_WIDTH = 20; // 0x14
    field protected static final int SWIPE_MARGIN_LIMIT = 5; // 0x5
    field protected static final deprecated long WAIT_FOR_EVENT_TMEOUT = 3000L; // 0xbb8L
    field protected static final long WAIT_FOR_SELECTOR_POLL = 1000L; // 0x3e8L
    field protected static final deprecated long WAIT_FOR_SELECTOR_TIMEOUT = 10000L; // 0x2710L
    field protected static final long WAIT_FOR_WINDOW_TMEOUT = 5500L; // 0x157cL
  }

  public class UiObject2 {
    method public void clear();
    method public void click();
    method public R clickAndWait(android.support.test.uiautomator.EventCondition<R>, long);
    method public void drag(android.graphics.Point);
    method public void drag(android.graphics.Point, int);
    method public android.support.test.uiautomator.UiObject2 findObject(android.support.test.uiautomator.BySelector);
    method public java.util.List<android.support.test.uiautomator.UiObject2> findObjects(android.support.test.uiautomator.BySelector);
    method public boolean fling(android.support.test.uiautomator.Direction);
    method public boolean fling(android.support.test.uiautomator.Direction, int);
    method public java.lang.String getApplicationPackage();
    method public int getChildCount();
    method public java.util.List<android.support.test.uiautomator.UiObject2> getChildren();
    method public java.lang.String getClassName();
    method public java.lang.String getContentDescription();
    method public android.support.test.uiautomator.UiObject2 getParent();
    method public java.lang.String getResourceName();
    method public java.lang.String getText();
    method public android.graphics.Rect getVisibleBounds();
    method public android.graphics.Point getVisibleCenter();
    method public boolean hasObject(android.support.test.uiautomator.BySelector);
    method public boolean isCheckable();
    method public boolean isChecked();
    method public boolean isClickable();
    method public boolean isEnabled();
    method public boolean isFocusable();
    method public boolean isFocused();
    method public boolean isLongClickable();
    method public boolean isScrollable();
    method public boolean isSelected();
    method public void longClick();
    method public void pinchClose(float);
    method public void pinchClose(float, int);
    method public void pinchOpen(float);
    method public void pinchOpen(float, int);
    method public void recycle();
    method public boolean scroll(android.support.test.uiautomator.Direction, float);
    method public boolean scroll(android.support.test.uiautomator.Direction, float, int);
    method public void setGestureMargin(int);
    method public void setGestureMargins(int, int, int, int);
    method public void setText(java.lang.String);
    method public void swipe(android.support.test.uiautomator.Direction, float);
    method public void swipe(android.support.test.uiautomator.Direction, float, int);
    method public R wait(android.support.test.uiautomator.UiObject2Condition<R>, long);
    method public R wait(android.support.test.uiautomator.SearchCondition<R>, long);
  }

  public abstract class UiObject2Condition extends android.support.test.uiautomator.Condition {
    ctor public UiObject2Condition();
  }

  public class UiObjectNotFoundException extends java.lang.Exception {
    ctor public UiObjectNotFoundException(java.lang.String);
    ctor public UiObjectNotFoundException(java.lang.String, java.lang.Throwable);
    ctor public UiObjectNotFoundException(java.lang.Throwable);
  }

  public class UiScrollable extends android.support.test.uiautomator.UiCollection {
    ctor public UiScrollable(android.support.test.uiautomator.UiSelector);
    method protected boolean exists(android.support.test.uiautomator.UiSelector);
    method public boolean flingBackward() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean flingForward() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean flingToBeginning(int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean flingToEnd(int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public android.support.test.uiautomator.UiObject getChildByDescription(android.support.test.uiautomator.UiSelector, java.lang.String, boolean) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public android.support.test.uiautomator.UiObject getChildByText(android.support.test.uiautomator.UiSelector, java.lang.String, boolean) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public int getMaxSearchSwipes();
    method public double getSwipeDeadZonePercentage();
    method public boolean scrollBackward() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean scrollBackward(int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean scrollDescriptionIntoView(java.lang.String) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean scrollForward() throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean scrollForward(int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean scrollIntoView(android.support.test.uiautomator.UiObject) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean scrollIntoView(android.support.test.uiautomator.UiSelector) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean scrollTextIntoView(java.lang.String) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean scrollToBeginning(int, int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean scrollToBeginning(int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean scrollToEnd(int, int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public boolean scrollToEnd(int) throws android.support.test.uiautomator.UiObjectNotFoundException;
    method public android.support.test.uiautomator.UiScrollable setAsHorizontalList();
    method public android.support.test.uiautomator.UiScrollable setAsVerticalList();
    method public android.support.test.uiautomator.UiScrollable setMaxSearchSwipes(int);
    method public android.support.test.uiautomator.UiScrollable setSwipeDeadZonePercentage(double);
  }

  public class UiSelector {
    ctor public UiSelector();
    method public android.support.test.uiautomator.UiSelector checkable(boolean);
    method public android.support.test.uiautomator.UiSelector checked(boolean);
    method public android.support.test.uiautomator.UiSelector childSelector(android.support.test.uiautomator.UiSelector);
    method public android.support.test.uiautomator.UiSelector className(java.lang.String);
    method public android.support.test.uiautomator.UiSelector className(java.lang.Class<T>);
    method public android.support.test.uiautomator.UiSelector classNameMatches(java.lang.String);
    method public android.support.test.uiautomator.UiSelector clickable(boolean);
    method protected android.support.test.uiautomator.UiSelector cloneSelector();
    method public android.support.test.uiautomator.UiSelector description(java.lang.String);
    method public android.support.test.uiautomator.UiSelector descriptionContains(java.lang.String);
    method public android.support.test.uiautomator.UiSelector descriptionMatches(java.lang.String);
    method public android.support.test.uiautomator.UiSelector descriptionStartsWith(java.lang.String);
    method public android.support.test.uiautomator.UiSelector enabled(boolean);
    method public android.support.test.uiautomator.UiSelector focusable(boolean);
    method public android.support.test.uiautomator.UiSelector focused(boolean);
    method public android.support.test.uiautomator.UiSelector fromParent(android.support.test.uiautomator.UiSelector);
    method public android.support.test.uiautomator.UiSelector index(int);
    method public android.support.test.uiautomator.UiSelector instance(int);
    method public android.support.test.uiautomator.UiSelector longClickable(boolean);
    method public android.support.test.uiautomator.UiSelector packageName(java.lang.String);
    method public android.support.test.uiautomator.UiSelector packageNameMatches(java.lang.String);
    method public android.support.test.uiautomator.UiSelector resourceId(java.lang.String);
    method public android.support.test.uiautomator.UiSelector resourceIdMatches(java.lang.String);
    method public android.support.test.uiautomator.UiSelector scrollable(boolean);
    method public android.support.test.uiautomator.UiSelector selected(boolean);
    method public android.support.test.uiautomator.UiSelector text(java.lang.String);
    method public android.support.test.uiautomator.UiSelector textContains(java.lang.String);
    method public android.support.test.uiautomator.UiSelector textMatches(java.lang.String);
    method public android.support.test.uiautomator.UiSelector textStartsWith(java.lang.String);
  }

  public abstract interface UiWatcher {
    method public abstract boolean checkForCondition();
  }

  public class Until {
    ctor public Until();
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> checkable(boolean);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> checked(boolean);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> clickable(boolean);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> descContains(java.lang.String);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> descEndsWith(java.lang.String);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> descEquals(java.lang.String);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> descMatches(java.util.regex.Pattern);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> descMatches(java.lang.String);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> descStartsWith(java.lang.String);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> enabled(boolean);
    method public static android.support.test.uiautomator.SearchCondition<android.support.test.uiautomator.UiObject2> findObject(android.support.test.uiautomator.BySelector);
    method public static android.support.test.uiautomator.SearchCondition<java.util.List<android.support.test.uiautomator.UiObject2>> findObjects(android.support.test.uiautomator.BySelector);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> focusable(boolean);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> focused(boolean);
    method public static android.support.test.uiautomator.SearchCondition<java.lang.Boolean> gone(android.support.test.uiautomator.BySelector);
    method public static android.support.test.uiautomator.SearchCondition<java.lang.Boolean> hasObject(android.support.test.uiautomator.BySelector);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> longClickable(boolean);
    method public static android.support.test.uiautomator.EventCondition<java.lang.Boolean> newWindow();
    method public static android.support.test.uiautomator.EventCondition<java.lang.Boolean> scrollFinished(android.support.test.uiautomator.Direction);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> scrollable(boolean);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> selected(boolean);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> textContains(java.lang.String);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> textEndsWith(java.lang.String);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> textEquals(java.lang.String);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> textMatches(java.util.regex.Pattern);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> textMatches(java.lang.String);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> textNotEquals(java.lang.String);
    method public static android.support.test.uiautomator.UiObject2Condition<java.lang.Boolean> textStartsWith(java.lang.String);
  }

}

